{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(python test:*)",
      "Bash(python3:*)",
      "Bash(chmod:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(npm install:*)",
      "Bash(git add:*)",
      "Bash(git rm:*)",
      "Bash(rm:*)",
      "Bash(git push:*)",
      "Bash(true)",
      "Bash(npm run build:client:*)",
      "Bash(npm run build:admin:*)",
      "Bash(cp:*)",
      "Bash(pkill:*)",
      "Bash(npm run dev:*)",
      "Bash(pip3 install:*)",
      "Bash(git commit:*)",
      "Bash(grep:*)",
      "Bash(touch:*)",
      "Bash(git restore:*)",
      "Bash(npm run build:*)",
      "Bash(npm ci:*)",
      "Bash(cat:*)",
      "Bash(git check-ignore:*)",
      "Bash(curl:*)",
      "Bash(railway projects:*)",
      "Bash(railway:*)",
      "WebFetch(domain:pdf-industrial-pipeline-production.up.railway.app)",
      "Bash(python:*)",
      "Bash(npm run:*)",
      "Bash(git fetch:*)",
      "Bash(before initialization\" runtime error.\n\nChanges:\n- Move refreshDocuments useCallback definition before useEffect that depends on it\n- Preserve all existing functionality and error handling\n- Fix initialization order to prevent circular reference\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(kill:*)",
      "Bash(# Start API in background\nPORT=9082 python3 main.py &\nAPI_PID=$!\necho \"\"Started API with PID: $API_PID\"\"\nsleep 5\n\necho \"\"=== Testing file upload ===\"\"\ncurl -X POST http://localhost:9082/api/v1/upload \\\n  -F \"\"file=@/tmp/test-upload.pdf\"\" \\\n  -F \"\"user_id=test-user-123\"\" \\\n  -w \"\"\\nHTTP Status: %{http_code}\\n\"\" \\\n  -s\n\necho -e \"\"\\n=== Testing upload without required fields ===\"\"\ncurl -X POST http://localhost:9082/api/v1/upload \\\n  -w \"\"\\nHTTP Status: %{http_code}\\n\"\" \\\n  -s\n\necho -e \"\"\\n=== Stopping API ===\"\"\nkill $API_PID 2>/dev/null || true\nrm -f /tmp/test-upload.pdf)",
      "Bash(bash:*)",
      "Bash(vercel:*)",
      "Bash(# Test complete workflow: Health -> Dashboard -> Jobs -> Upload\necho \"\"=== Testing Complete Frontend-Backend Integration ===\"\"\n\necho \"\"1. Health Check:\"\"\ncurl -s -X GET \"\"https://pdf-industrial-pipeline-production.up.railway.app/health\"\" \\\n  -H \"\"Origin: https://client-frontend-1pyjf3a5m-gabrielrondons-projects.vercel.app\"\" | jq .\n\necho -e \"\"\\n2. Dashboard Stats:\"\"\ncurl -s -X GET \"\"https://pdf-industrial-pipeline-production.up.railway.app/api/v1/jobs/stats/dashboard\"\" \\\n  -H \"\"Origin: https://client-frontend-1pyjf3a5m-gabrielrondons-projects.vercel.app\"\" | jq .\n\necho -e \"\"\\n3. User Jobs (before upload):\"\"\ncurl -s -X GET \"\"https://pdf-industrial-pipeline-production.up.railway.app/api/v1/jobs?user_id=frontend-test-user\"\" \\\n  -H \"\"Origin: https://client-frontend-1pyjf3a5m-gabrielrondons-projects.vercel.app\"\" | jq .\n\necho -e \"\"\\n4. File Upload Test:\"\"\necho \"\"Test PDF content for frontend integration\"\" > /tmp/frontend-test.pdf\ncurl -s -X POST \"\"https://pdf-industrial-pipeline-production.up.railway.app/api/v1/upload\"\" \\\n  -H \"\"Origin: https://client-frontend-1pyjf3a5m-gabrielrondons-projects.vercel.app\"\" \\\n  -F \"\"file=@/tmp/frontend-test.pdf\"\" \\\n  -F \"\"user_id=frontend-test-user\"\" | jq .\n\necho -e \"\"\\n=== Integration Test Complete ===\"\")",
      "Bash(git reset:*)"
    ],
    "deny": []
  }
}